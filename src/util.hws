@INCLUDE "StringLib/StringUtils.hws"

Global HEUtils = {}

Function HEUtils.NormalizePath(path)
    If StringUtils.IsEmpty(path)
        Return (StringUtils.EMPTY)
    EndIf

    Local value, _n = PatternReplaceStr(path, "\\", "/")
    value, _n = PatternReplaceStr(value, "^/*", "/")
    value, _n = PatternReplaceStr(value, "(/%.%.?)$", "%1/")
    value, _n = PatternReplaceStr(value, "/%./", "/")
    value, _n = PatternReplaceStr(value, "/+", "/")

    While True
        Local first, last = PatternFindStrDirect(value, "/[^/]+/%.%./")
        If first = -1 Then Break
        value = StringUtils.Substring(value, 1, first)
        value = value .. StringUtils.Substring(value, last + 1) 
    Wend

    While True
        Local n = 0
        value, n = PatternReplaceStr(value, "^/%.%.?/", "/")
        If n = 0 Then Break
    Wend

    While True
        Local n = 0
        value, n = PatternReplaceStr(value, "/%.%.?$", "/")
        If n = 0 Then Break
    Wend

    Return (value)
EndFunction

Function HEUtils.ToHex(dec)
    Local charset = { '0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f' }
    Local tmp = {}

    Repeat
        InsertItem(tmp, 1, charset[dec % 16  + 1])
        dec = Floor(dec / 16)
    Until dec = 0

    Return (Concat(tmp))
EndFunction
