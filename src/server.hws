@INCLUDE "socket.hws"
@INCLUDE "handler.hws"
@INCLUDE "logger.hws"

Const #EXP_SVR_VER = "1.0.0"

Global HollywoodExpressServer = {}
HollywoodExpressServer.host = "*"
HollywoodExpressServer.port = 8080
HollywoodExpressServer.location = ""
HollywoodExpressServer.plugins = {}
HollywoodExpressServer.timeout = 1
HollywoodExpressServer.log = {}
HollywoodExpressServer.VERSION = #EXP_SVR_VER

Function HollywoodExpressServer:New(params)
	DebugPrint("HollywoodExpressServer:New()")
    If GetType(params) <> #TABLE Then params = {}
	Local inHost = "*"
	If GetType(RawGet(params, "host")) = #STRING Then inHost = RawGet(params, "host")
	Local inPort = 8080
	If GetType(RawGet(params, "port")) = #NUMBER Then inPort = RawGet(params, "port")
	Local inLoc = ""
	If GetType(RawGet(params, "location")) = #STRING Then inLoc = RawGet(params, "location")
	Local inPlugs = {}
	If GetType(RawGet(params, "plugins")) = #TABLE Then inPlugs = RawGet(params, "plugins")
	Local inTimeout = 1
	If GetType(RawGet(params, "timeout")) = #NUMBER Then inTimeout = RawGet(params, "timeout")
	Local inLog = Logger:New(#EXP_LOG_MODE_CONSOLE_ONLY)
	If GetType(RawGet(params, "log")) = #TABLE Then inLog = RawGet(params, "log")
    
    Local instance = CopyTable(self)
    instance.host = inHost
    instance.port = inPort
    instance.location = inLoc
    instance.plugins = inPlugs
    instance.timeout = inTimeout
    instance.log = inLog

    Return (instance)
EndFunction

Function HollywoodExpressServer:Listen(callback)
	DebugPrint("HollywoodExpressServer:Listen()")
    Local handler = Handler:New(callback, self.location, self.plugins, self.log)
    Local server = Socket.Bind(self.host, self.port)
    Local ip, port = server:GetSocketName()

    NPrint("Express v" .. self.VERSION ..  " is up on " .. ip .. ":" .. ToString(port))
    handler.log:Info(FormatStr("Express v%s is up on %s:%s", self.VERSION, ip, port))
    
    While True
        Local client, errMsg = server:Accept()
        If Not IsNil(client)
            client:SetTimeout(self.timeout)
            handler:ProcessRequest(self.port, client, server)
        Else
            handler.log:Error(FormatStr("Failed to accept connection: %s", errMsg))
        EndIf
    Wend
EndFunction
